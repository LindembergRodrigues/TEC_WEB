generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  matricula  String   @id @default(uuid())
  nome       String
  email      String   @unique
  senha      String
  tipo       Role     
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relações
  disciplinasProfessor Disciplina[] @relation("DisciplinaProfessor")
  historico Historico[]

  @@map("usuarios")
}

model Disciplina {
  codigo     String   @id
  descricao  String
  creditos   Int
  turmaId    Int
  horarioId  Int
  professor  String
  periodo    Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relações
  turma      Turma    @relation(fields: [turmaId], references: [id])
  horario    Horario  @relation(fields: [horarioId], references: [id])
  professorRelacao Usuario @relation("DisciplinaProfessor", fields: [professor], references: [matricula])

  historico Historico[] 

  @@map("disciplinas")
}

model Historico {
  matriculaUsuario String
  codigoDisciplina String
  situacao         String?

  // Relações
  usuario    Usuario    @relation(fields: [matriculaUsuario], references: [matricula])
  disciplina Disciplina @relation(fields: [codigoDisciplina], references: [codigo])

  @@id([matriculaUsuario, codigoDisciplina])
  @@map("historico")
}

enum Role {
  ALUNO
  PROFESSOR
  COORDENADOR
}

model Turma {
  id         Int      @id @default(autoincrement())
  descricao  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relação
  disciplinas Disciplina[] 

  @@map("turmas")
}

model Horario {
  id         Int      @id @default(autoincrement())
  descricao  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relação
  disciplinas Disciplina[]  
  @@map("horarios")
}
